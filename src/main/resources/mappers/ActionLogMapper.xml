<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sb.dao.actionlog.ActionLogMapper">

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `sb_action_log`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sb.dao.actionlog.model.ActionLogExample">
    delete from `sb_action_log`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.sb.dao.actionlog.model.ActionLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `sb_action_log` (
      `business_type_id`,
      `org_id`,
      `trade_date1`,
      `trade_date2`,
      `trade_date3`,
      `trade_date4`,
      `trade_date5`,
      `trade_date6`,
      `trade_date7`,
      `trade_date8`,
      `trade_date9`
    )
    values (
      #{businessTypeId,jdbcType=INTEGER},
      #{orgId,jdbcType=INTEGER},
      #{tradeDate1,jdbcType=DATE},
      #{tradeDate2,jdbcType=DATE},
      #{tradeDate3,jdbcType=DATE},
      #{tradeDate4,jdbcType=DATE},
      #{tradeDate5,jdbcType=DATE},
      #{tradeDate6,jdbcType=DATE},
      #{tradeDate7,jdbcType=DATE},
      #{tradeDate8,jdbcType=DATE},
      #{tradeDate9,jdbcType=DATE}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.sb.dao.actionlog.model.ActionLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `sb_action_log`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="businessTypeId != null">
      `business_type_id`,
      </if>
      <if test="orgId != null">
      `org_id`,
      </if>
      <if test="tradeDate1 != null">
      `trade_date1`,
      </if>
      <if test="tradeDate2 != null">
      `trade_date2`,
      </if>
      <if test="tradeDate3 != null">
      `trade_date3`,
      </if>
      <if test="tradeDate4 != null">
      `trade_date4`,
      </if>
      <if test="tradeDate5 != null">
      `trade_date5`,
      </if>
      <if test="tradeDate6 != null">
      `trade_date6`,
      </if>
      <if test="tradeDate7 != null">
      `trade_date7`,
      </if>
      <if test="tradeDate8 != null">
      `trade_date8`,
      </if>
      <if test="tradeDate9 != null">
      `trade_date9`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="businessTypeId != null">
      #{businessTypeId,jdbcType=INTEGER},
      </if>
      <if test="orgId != null">
      #{orgId,jdbcType=INTEGER},
      </if>
      <if test="tradeDate1 != null">
      #{tradeDate1,jdbcType=DATE},
      </if>
      <if test="tradeDate2 != null">
      #{tradeDate2,jdbcType=DATE},
      </if>
      <if test="tradeDate3 != null">
      #{tradeDate3,jdbcType=DATE},
      </if>
      <if test="tradeDate4 != null">
      #{tradeDate4,jdbcType=DATE},
      </if>
      <if test="tradeDate5 != null">
      #{tradeDate5,jdbcType=DATE},
      </if>
      <if test="tradeDate6 != null">
      #{tradeDate6,jdbcType=DATE},
      </if>
      <if test="tradeDate7 != null">
      #{tradeDate7,jdbcType=DATE},
      </if>
      <if test="tradeDate8 != null">
      #{tradeDate8,jdbcType=DATE},
      </if>
      <if test="tradeDate9 != null">
      #{tradeDate9,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <resultMap id="BaseResultMap" type="com.sb.dao.actionlog.model.ActionLog">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="business_type_id" jdbcType="INTEGER" property="businessTypeId"/>
    <result column="org_id" jdbcType="INTEGER" property="orgId"/>
    <result column="trade_date1" jdbcType="DATE" property="tradeDate1"/>
    <result column="trade_date2" jdbcType="DATE" property="tradeDate2"/>
    <result column="trade_date3" jdbcType="DATE" property="tradeDate3"/>
    <result column="trade_date4" jdbcType="DATE" property="tradeDate4"/>
    <result column="trade_date5" jdbcType="DATE" property="tradeDate5"/>
    <result column="trade_date6" jdbcType="DATE" property="tradeDate6"/>
    <result column="trade_date7" jdbcType="DATE" property="tradeDate7"/>
    <result column="trade_date8" jdbcType="DATE" property="tradeDate8"/>
    <result column="trade_date9" jdbcType="DATE" property="tradeDate9"/>
  </resultMap>
  <select id="selectByExample" parameterType="com.sb.dao.actionlog.model.ActionLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    from `sb_action_log`
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="Base_Column_List"/>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `sb_action_log`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <select id="countByExample" parameterType="com.sb.dao.actionlog.model.ActionLogExample" resultType="java.lang.Integer">
    select count(*) from `sb_action_log`
    <if test="_parameter != null">
    <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `business_type_id`, `org_id`, `trade_date1`, `trade_date2`, `trade_date3`, `trade_date4`, `trade_date5`, `trade_date6`, `trade_date7`, `trade_date8`, `trade_date9`
  </sql>
  <update id="updateByExampleSelective" parameterType="map">
    update `sb_action_log`
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
    <set>
      <if test="record.businessTypeId != null">
      `business_type_id` = #{record.businessTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.orgId != null">
      `org_id` = #{record.orgId,jdbcType=INTEGER},
      </if>
      <if test="record.tradeDate1 != null">
      `trade_date1` = #{record.tradeDate1,jdbcType=DATE},
      </if>
      <if test="record.tradeDate2 != null">
      `trade_date2` = #{record.tradeDate2,jdbcType=DATE},
      </if>
      <if test="record.tradeDate3 != null">
      `trade_date3` = #{record.tradeDate3,jdbcType=DATE},
      </if>
      <if test="record.tradeDate4 != null">
      `trade_date4` = #{record.tradeDate4,jdbcType=DATE},
      </if>
      <if test="record.tradeDate5 != null">
      `trade_date5` = #{record.tradeDate5,jdbcType=DATE},
      </if>
      <if test="record.tradeDate6 != null">
      `trade_date6` = #{record.tradeDate6,jdbcType=DATE},
      </if>
      <if test="record.tradeDate7 != null">
      `trade_date7` = #{record.tradeDate7,jdbcType=DATE},
      </if>
      <if test="record.tradeDate8 != null">
      `trade_date8` = #{record.tradeDate8,jdbcType=DATE},
      </if>
      <if test="record.tradeDate9 != null">
      `trade_date9` = #{record.tradeDate9,jdbcType=DATE}
      </if>
    </set>
  </update>
  <update id="updateByExample" parameterType="map">
    update `sb_action_log`
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
    <set>
      `business_type_id` = #{record.businessTypeId,jdbcType=INTEGER},
      `org_id` = #{record.orgId,jdbcType=INTEGER},
      `trade_date1` = #{record.tradeDate1,jdbcType=DATE},
      `trade_date2` = #{record.tradeDate2,jdbcType=DATE},
      `trade_date3` = #{record.tradeDate3,jdbcType=DATE},
      `trade_date4` = #{record.tradeDate4,jdbcType=DATE},
      `trade_date5` = #{record.tradeDate5,jdbcType=DATE},
      `trade_date6` = #{record.tradeDate6,jdbcType=DATE},
      `trade_date7` = #{record.tradeDate7,jdbcType=DATE},
      `trade_date8` = #{record.tradeDate8,jdbcType=DATE},
      `trade_date9` = #{record.tradeDate9,jdbcType=DATE}
    </set>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sb.dao.actionlog.model.ActionLog">
    update `sb_action_log`
    <set>
      <if test="businessTypeId != null">
      `business_type_id` = #{businessTypeId,jdbcType=INTEGER}, 
      </if>
      <if test="orgId != null">
      `org_id` = #{orgId,jdbcType=INTEGER}, 
      </if>
      <if test="tradeDate1 != null">
      `trade_date1` = #{tradeDate1,jdbcType=DATE}, 
      </if>
      <if test="tradeDate2 != null">
      `trade_date2` = #{tradeDate2,jdbcType=DATE}, 
      </if>
      <if test="tradeDate3 != null">
      `trade_date3` = #{tradeDate3,jdbcType=DATE}, 
      </if>
      <if test="tradeDate4 != null">
      `trade_date4` = #{tradeDate4,jdbcType=DATE}, 
      </if>
      <if test="tradeDate5 != null">
      `trade_date5` = #{tradeDate5,jdbcType=DATE}, 
      </if>
      <if test="tradeDate6 != null">
      `trade_date6` = #{tradeDate6,jdbcType=DATE}, 
      </if>
      <if test="tradeDate7 != null">
      `trade_date7` = #{tradeDate7,jdbcType=DATE}, 
      </if>
      <if test="tradeDate8 != null">
      `trade_date8` = #{tradeDate8,jdbcType=DATE}, 
      </if>
      <if test="tradeDate9 != null">
      `trade_date9` = #{tradeDate9,jdbcType=DATE}
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sb.dao.actionlog.model.ActionLog">
    update `sb_action_log`
    <set>
      `business_type_id` = #{businessTypeId,jdbcType=INTEGER}, 
      `org_id` = #{orgId,jdbcType=INTEGER}, 
      `trade_date1` = #{tradeDate1,jdbcType=DATE}, 
      `trade_date2` = #{tradeDate2,jdbcType=DATE}, 
      `trade_date3` = #{tradeDate3,jdbcType=DATE}, 
      `trade_date4` = #{tradeDate4,jdbcType=DATE}, 
      `trade_date5` = #{tradeDate5,jdbcType=DATE}, 
      `trade_date6` = #{tradeDate6,jdbcType=DATE}, 
      `trade_date7` = #{tradeDate7,jdbcType=DATE}, 
      `trade_date8` = #{tradeDate8,jdbcType=DATE}, 
      `trade_date9` = #{tradeDate9,jdbcType=DATE}
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
</mapper>
