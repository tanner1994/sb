<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sb.dao.costplan.CostPlanMapper">

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `sb_cost_plan`
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sb.dao.costplan.model.CostPlanExample">
    delete from `sb_cost_plan`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="com.sb.dao.costplan.model.CostPlan">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `sb_cost_plan` (
      `code`,
      `name`,
      `cost_type`,
      `is_org`,
      `is_cap_account`,
      `is_selfs_group`,
      `is_partn_account`,
      `org_id`
    )
    values (
      #{code,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR},
      #{costType,jdbcType=INTEGER},
      #{isOrg,jdbcType=BIT},
      #{isCapAccount,jdbcType=BIT},
      #{isSelfsGroup,jdbcType=BIT},
      #{isPartnAccount,jdbcType=BIT},
      #{orgId,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.sb.dao.costplan.model.CostPlan">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `sb_cost_plan`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
      `code`,
      </if>
      <if test="name != null">
      `name`,
      </if>
      <if test="costType != null">
      `cost_type`,
      </if>
      <if test="isOrg != null">
      `is_org`,
      </if>
      <if test="isCapAccount != null">
      `is_cap_account`,
      </if>
      <if test="isSelfsGroup != null">
      `is_selfs_group`,
      </if>
      <if test="isPartnAccount != null">
      `is_partn_account`,
      </if>
      <if test="orgId != null">
      `org_id`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
      #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
      #{name,jdbcType=VARCHAR},
      </if>
      <if test="costType != null">
      #{costType,jdbcType=INTEGER},
      </if>
      <if test="isOrg != null">
      #{isOrg,jdbcType=BIT},
      </if>
      <if test="isCapAccount != null">
      #{isCapAccount,jdbcType=BIT},
      </if>
      <if test="isSelfsGroup != null">
      #{isSelfsGroup,jdbcType=BIT},
      </if>
      <if test="isPartnAccount != null">
      #{isPartnAccount,jdbcType=BIT},
      </if>
      <if test="orgId != null">
      #{orgId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <resultMap id="BaseResultMap" type="com.sb.dao.costplan.model.CostPlan">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="code" jdbcType="VARCHAR" property="code"/>
    <result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="cost_type" jdbcType="INTEGER" property="costType"/>
    <result column="is_org" jdbcType="BIT" property="isOrg"/>
    <result column="is_cap_account" jdbcType="BIT" property="isCapAccount"/>
    <result column="is_selfs_group" jdbcType="BIT" property="isSelfsGroup"/>
    <result column="is_partn_account" jdbcType="BIT" property="isPartnAccount"/>
    <result column="org_id" jdbcType="INTEGER" property="orgId"/>
  </resultMap>
  <select id="selectByExample" parameterType="com.sb.dao.costplan.model.CostPlanExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    from `sb_cost_plan`
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <include refid="Base_Column_List"/>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from `sb_cost_plan`
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <select id="countByExample" parameterType="com.sb.dao.costplan.model.CostPlanExample" resultType="java.lang.Integer">
    select count(*) from `sb_cost_plan`
    <if test="_parameter != null">
    <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                      #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `code`, `name`, `cost_type`, `is_org`, `is_cap_account`, `is_selfs_group`, `is_partn_account`, `org_id`
  </sql>
  <update id="updateByExampleSelective" parameterType="map">
    update `sb_cost_plan`
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
    <set>
      <if test="record.code != null">
      `code` = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
      `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.costType != null">
      `cost_type` = #{record.costType,jdbcType=INTEGER},
      </if>
      <if test="record.isOrg != null">
      `is_org` = #{record.isOrg,jdbcType=BIT},
      </if>
      <if test="record.isCapAccount != null">
      `is_cap_account` = #{record.isCapAccount,jdbcType=BIT},
      </if>
      <if test="record.isSelfsGroup != null">
      `is_selfs_group` = #{record.isSelfsGroup,jdbcType=BIT},
      </if>
      <if test="record.isPartnAccount != null">
      `is_partn_account` = #{record.isPartnAccount,jdbcType=BIT},
      </if>
      <if test="record.orgId != null">
      `org_id` = #{record.orgId,jdbcType=INTEGER}
      </if>
    </set>
  </update>
  <update id="updateByExample" parameterType="map">
    update `sb_cost_plan`
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
    <set>
      `code` = #{record.code,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      `cost_type` = #{record.costType,jdbcType=INTEGER},
      `is_org` = #{record.isOrg,jdbcType=BIT},
      `is_cap_account` = #{record.isCapAccount,jdbcType=BIT},
      `is_selfs_group` = #{record.isSelfsGroup,jdbcType=BIT},
      `is_partn_account` = #{record.isPartnAccount,jdbcType=BIT},
      `org_id` = #{record.orgId,jdbcType=INTEGER}
    </set>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sb.dao.costplan.model.CostPlan">
    update `sb_cost_plan`
    <set>
      <if test="code != null">
      `code` = #{code,jdbcType=VARCHAR}, 
      </if>
      <if test="name != null">
      `name` = #{name,jdbcType=VARCHAR}, 
      </if>
      <if test="costType != null">
      `cost_type` = #{costType,jdbcType=INTEGER}, 
      </if>
      <if test="isOrg != null">
      `is_org` = #{isOrg,jdbcType=BIT}, 
      </if>
      <if test="isCapAccount != null">
      `is_cap_account` = #{isCapAccount,jdbcType=BIT}, 
      </if>
      <if test="isSelfsGroup != null">
      `is_selfs_group` = #{isSelfsGroup,jdbcType=BIT}, 
      </if>
      <if test="isPartnAccount != null">
      `is_partn_account` = #{isPartnAccount,jdbcType=BIT}, 
      </if>
      <if test="orgId != null">
      `org_id` = #{orgId,jdbcType=INTEGER}
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sb.dao.costplan.model.CostPlan">
    update `sb_cost_plan`
    <set>
      `code` = #{code,jdbcType=VARCHAR}, 
      `name` = #{name,jdbcType=VARCHAR}, 
      `cost_type` = #{costType,jdbcType=INTEGER}, 
      `is_org` = #{isOrg,jdbcType=BIT}, 
      `is_cap_account` = #{isCapAccount,jdbcType=BIT}, 
      `is_selfs_group` = #{isSelfsGroup,jdbcType=BIT}, 
      `is_partn_account` = #{isPartnAccount,jdbcType=BIT}, 
      `org_id` = #{orgId,jdbcType=INTEGER}
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
</mapper>
